# # # # # # # #
# Tuya TS004F Smart Knob for Lights
# Creation: 9 Jan 2025
# Version: 1.17
# # # # # # # #

blueprint:
  name: Tuya TS004F Smart Knob for Lights (v1.17)
  description: >
    Use a Tuya Smart Knob (TS004F) to control brightness, toggle lights, and adjust color and color temperature (in Kelvin) for selected light(s). Instant transitions for immediate user feedback. Configurable full-turn range.
  domain: automation
  input:
    knob_device:
      name: "Smart Knob"
      description: "Select your Tuya Smart Knob (TS004F) device."
      selector:
        device:
          integration: zha # Or deconz, zigbee2mqtt
    target_lights:
      name: "Lights to Control"
      description: "Select the lights to control with the knob."
      selector:
        target:
          entity:
            domain: light
    default_brightness:
      name: "Default Brightness"
      description: "Brightness level to set when turning on the light(s)."
      default: 255
      selector:
        number:
          min: 1
          max: 255
          unit_of_measurement: "level"
          mode: slider
    default_color_temp:
      name: "Default Color Temperature (Kelvin)"
      description: "Default color temperature (in Kelvin) for the light(s)."
      default: 3700
      selector:
        number:
          min: 2700
          max: 6500
          unit_of_measurement: "K"
          mode: slider
    full_turns_brightness:
      name: "Number of Full Turns for Brightness Adjustment"
      description: "Number of full knob turns to traverse the full brightness range (0-255)."
      default: 2
      selector:
        number:
          min: 1
          max: 5
          unit_of_measurement: "turns"
    full_turns_color_temp:
      name: "Number of Full Turns for Color Temperature Adjustment"
      description: "Number of full knob turns to traverse the full color temperature range (2700K-6500K)."
      default: 2
      selector:
        number:
          min: 1
          max: 5
          unit_of_measurement: "turns"

mode: queued
max_exceeded: silent

variables:
  target_lights: !input target_lights
  default_brightness: !input default_brightness
  default_color_temp: !input default_color_temp
  full_turns_brightness: !input full_turns_brightness
  full_turns_color_temp: !input full_turns_color_temp

  # Calculated step factors
  brightness_step_factor: "{{ 255 / (full_turns_brightness * 255) }}"  # One full turn = 255 steps
  color_temp_step_factor: "{{ (6500 - 2700) / (full_turns_color_temp * 255) }}"  # One full turn = 255 steps

trigger:
  - platform: event
    event_type: zha_event
    event_data:
      device_id: !input knob_device

action:
  - choose:
      # Tap to toggle light(s)
      - conditions:
          - "{{ trigger.event.data.command == 'toggle' }}"
        sequence:
          - service: light.toggle
            target: !input target_lights
            data:
              transition: 0
              brightness: !input default_brightness
              color_temp_kelvin: !input default_color_temp

      # Rotate to change brightness (CW/CCW)
      - conditions:
          - "{{ trigger.event.data.command == 'step' }}"
        sequence:
          - service: light.turn_on
            target: !input target_lights
            data:
              transition: 0
              brightness: >
                {{
                  [
                    (state_attr(target_lights.entity_id, 'brightness') | int) + 
                    (trigger.event.data.params.step_size * brightness_step_factor | float * (1 if trigger.event.data.params.step_mode == 0 else -1)),
                    0,
                    255
                  ] | sort | slice(1, 2) | first
                }}

      # Rotate to change color temperature (CW/CCW)
      - conditions:
          - "{{ trigger.event.data.command == 'step_color_temp' }}"
        sequence:
          - service: light.turn_on
            target: !input target_lights
            data:
              transition: 0
              color_temp_kelvin: >
                {{
                  [
                    (state_attr(target_lights.entity_id, 'color_temp_kelvin') | int) +
                    (trigger.event.data.params.step_size * color_temp_step_factor | float * (1 if trigger.event.data.params.step_mode == 0 else -1)),
                    2700,
                    6500
                  ] | sort | slice(1, 2) | first
                }}

    default: []
