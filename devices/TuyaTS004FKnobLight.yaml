# # # # # # # #
# Tuya TS004F Smart Knob for Lights
# Creation: 9 Jan 2025
# Version: 1.20
# # # # # # # #

blueprint:
  name: Tuya TS004F Smart Knob for Lights (v1.20)
  description: >
    Use a Tuya Smart Knob (TS004F) to control brightness, toggle lights, and adjust color and color temperature (in Kelvin) for selected light(s). Instant transitions for immediate user feedback.
  domain: automation
  input:
    knob_device:
      name: "Smart Knob"
      description: "Select your Tuya Smart Knob (TS004F) device."
      selector:
        device:
          integration: zha # Or deconz, zigbee2mqtt
    target_lights:
      name: "Lights to Control"
      description: "Select the lights to control with the knob."
      selector:
        target:
          entity:
            domain: light
    brightness_step:
      name: "Percentage to increase or decrease brightness."
      description: "The percentage to increase or decrease brightness when the knob is rotated."
      selector:
        number:
          min: 1
          max: 50
          unit_of_measurement: "%"
      default: 18
    default_brightness:
      name: "Default Brightness"
      description: "Brightness level to set when turning on the light(s)."
      default: 255
      selector:
        number:
          min: 1
          max: 255
          unit_of_measurement: "level"
          mode: slider
    default_color_temp:
      name: "Default Color Temperature (Kelvin)"
      description: "Default color temperature (in kelvins) for the light(s)."
      default: 3700
      selector:
        number:
          min: 2700
          max: 6500
          unit_of_measurement: "K"
          mode: slider
    color_temp_step:
      name: "Color Temperature Step"
      description: "Amount to increase or decrease the color temperature with each rotation."
      default: 100
      selector:
        number:
          min: 100
          max: 4000
          unit_of_measurement: "K"
          mode: slider

#mode: queued
mode: single
max_exceeded: silent

variables:
  target_lights: !input target_lights
  default_brightness: !input default_brightness
  brightness_step: !input brightness_step
  default_color_temp: !input default_color_temp
  color_temp_step: !input color_temp_step

trigger:
  - platform: event
    event_type: zha_event
    event_data:
      device_id: !input knob_device

action:
  - choose:
      # Tap to toggle light(s)
      - conditions:
          - "{{ trigger.event.data.command == 'toggle' }}"
        sequence:
          - service: light.toggle
            target: !input target_lights
            data:
              transition: 0
              brightness: !input default_brightness
              color_temp_kelvin: !input default_color_temp

      # Rotate Left (CCW) to decrease brightness
      - conditions:
          - "{{ trigger.event.data.command == 'step' }}"
          - "{{ trigger.event.data.params.step_mode == 1 }}" # Down/CCW
        sequence:
          - service: light.turn_on
            target: !input target_lights
            data:
              transition: 0
              brightness_step_pct: "{{ -1 * (brightness_step | int) }}"

      # Rotate Right (CW) to increase brightness
      - conditions:
          - "{{ trigger.event.data.command == 'step' }}"
          - "{{ trigger.event.data.params.step_mode == 0 }}" # Up/CW
        sequence:
          - service: light.turn_on
            target: !input target_lights
            data:
              transition: 0
              brightness_step_pct: "{{ brightness_step | int }}"

      # Hold and Rotate Left (CCW) to decrease color temperature
      - conditions:
          - "{{ trigger.event.data.command == 'step_color_temp' }}"
          - "{{ trigger.event.data.params.step_mode == 3 }}" # Down/CCW
        sequence:
          - service: light.turn_on
            target: !input target_lights
            data:
              transition: 0
              color_temp_kelvin: >
                {{
                  [
                    (state_attr(target_lights.entity_id, 'color_temp_kelvin') | int) - (color_temp_step | int),
                    2700
                  ] | max
                }}

      # Hold and Rotate Right (CW) to increase color temperature
      - conditions:
          - "{{ trigger.event.data.command == 'step_color_temp' }}"
          - "{{ trigger.event.data.params.step_mode == 1 }}" # Up/CW
        sequence:
          - service: light.turn_on
            target: !input target_lights
            data:
              transition: 0
              color_temp_kelvin: >
                {{
                  [
                    (state_attr(target_lights.entity_id, 'color_temp_kelvin') | int) + (color_temp_step | int),
                    6500
                  ] | min
                }}

    default: []
