blueprint:
  name: Philips Hue Dimmer RWL022 with Custom On Actions
  description: >
    Control multiple light entities with a Philips Hue Dimmer Switch
    (v2) and define custom actions for the default light behaviour.
  domain: automation
  input:
    remote:
      name: Philips Hue Dimmer Switch v2
      description: The Philips Hue v2 Smart Dimmer Switch device.
      selector:
        device:
          integration: zha
          model: RWL022
    light_entities:
      name: The light entities to control.
      description: The light entities to be controlled by the dimmer switch.
      selector:
        target:
          entity:
            domain: light
    brightness_steps:
      name: Percentage to increase or decrease brightness.
      description: The percentage to increase or decrease brightness when the button
        is pressed.
      selector:
        number:
          min: 1
          max: 50
          unit_of_measurement: "%"
      default: 18
    color_temp:
      name: Default Colour Temperature
      description: The default color temperature in Kelvin when the lights are turned on.
      selector:
        color_temp:
          min: 2100
          max: 6500
          unit: kelvin
    custom_on_actions:
      name: Custom Actions for Light On
      description: Actions to perform when the lights are turned on.
      default: []
      selector:
        action: {}
mode: restart
max_exceeded: silent
variables:
  light_entities: light_entities
  brightness_steps: brightness_steps
  color_temp: color_temp
  custom_on_actions: custom_on_actions
trigger:
  - platform: event
    event_type: zha_event
    event_data:
      device_id: remote
      cluster_id: 64512
action:
  - variables:
      command: "{{ trigger.event.data.command }}"
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ command == 'on_press' }}"
        sequence:
          - service: light.toggle
            target: light_entities
            data:
              transition: 0.4
              color_temp: "{{ colour_temp }}"
              brightness: 255
      - conditions:
          - condition: template
            value_template: "{{ command == 'off_press' }}"
        sequence:
          - service: light.turn_off
            target: light_entities
            data:
              transition: 0.4
      - conditions:
          - condition: or
            conditions:
              - condition: template
                value_template: "{{ command == 'up_press' }}"
              - condition: template
                value_template: "{{ command == 'up_hold' }}"
        sequence:
          - service: light.turn_on
            target: light_entities
            data:
              transition: 0.5
              brightness_step_pct: "{{ brightness_steps }}"
      - conditions:
          - condition: or
            conditions:
              - condition: template
                value_template: "{{ command == 'down_press' }}"
              - condition: template
                value_template: "{{ command == 'down_hold' }}"
        sequence:
          - service: light.turn_on
            target: light_entities
            data:
              transition: 0.5
              brightness_step_pct: "{{ brightness_steps * -1 }}"
