# Blueprint version 36
blueprint:
  name: Hue v2 Dimmer for Lights
  description: "Philips Hue v2 Smart Dimmer Switch using Zigbee Home Automation"
  domain: automation

  input:
    dimmer_switch:
      name: Hue Dimmer Switch
      description: The Philips Hue v2 Smart Dimmer Switch device that will send the commands
      selector:
        device:
          integration: zha
          model: RWL022

    light_group:
      name: Light (Group)
      description: The light or light group to control
      selector:
        target:
          entity: {}

    # Top

    top_double_press:
      name: Top Button Double Press Action
      description: Action for double press of top button
      selector:
        action: {}

    top_triple_press:
      name: Top Button Triple Press Action
      description: Action for triple press of top button
      selector:
        action: {}

    top_hold:
      name: Top Button Hold Action
      description: Action for hold of top button
      selector:
        action: {}


mode: restart
max_exceeded: silent


trigger:
  - platform: event
    event_type: zha_event
    event_data:
      dimmer_switch: !input "dimmer_switch"


condition:
  - condition: template
    value_template: "{{ trigger.event.data.device_id == input.dimmer_switch.id }}"


action:
  - variables:
      button: "{{ trigger.event.data.args.button }}"
      command_type: "{{ trigger.event.data.command }}"
      light_group: "{{ input.light_group.id }}"

  - choose:

      ######################################################################
      ## Top Button Logic
      ######################################################################
      - conditions:
          - condition: template
            value_template: "{{ button == 'top' }}"
        sequence:
          - choose:
              # Top Single Press
              - conditions:
                  - condition: template
                    value_template: "{{ command_type == 'press' }}"
                sequence:
                  - service: light.turn_on
                    data:
                      entity_id: "{{ light_group }}"
                      brightness: 255
                      color_temp: 5000
                      transition: 1

              # Top Double Press
              - conditions:
                  - condition: template
                    value_template: "{{ command_type == 'top_double_press' }}"
                sequence: !input "top_double_press"

              # Top Triple Press
              - conditions:
                  - condition: template
                    value_template: "{{ command_type == 'top_triple_press' }}"
                sequence: !input "top_triple_press"

              # Top Hold
              - conditions:
                  - condition: template
                    value_template: "{{ command_type == 'top_hold' }}"
                sequence: !input "top_hold"

      ######################################################################
      ## Up Button Logic
      ######################################################################
      - conditions:
          - condition: template
            value_template: "{{ button == 'up' }}"
        sequence:
          - choose:
              # Up Single Press
              - conditions:
                  - condition: template
                    value_template: "{{ command_type == 'press' }}"
                sequence: []

              # Up Double Press
              - conditions:
                  - condition: template
                    value_template: "{{ command_type == 'up_double_press' }}"
                sequence: []

              # Up Triple Press
              - conditions:
                  - condition: template
                    value_template: "{{ command_type == 'up_triple_press' }}"
                sequence: []

              # Up Hold
              - conditions:
                  - condition: template
                    value_template: "{{ command_type == 'up_hold' }}"
                sequence: []


      ######################################################################
      ## Down Button Logic
      ######################################################################
      - conditions:
          - condition: template
            value_template: "{{ button == 'down' }}"
        sequence:
          - choose:
              # Down Single Press
              - conditions:
                  - condition: template
                    value_template: "{{ command_type == 'press' }}"
                sequence: []

              # Down Double Press
              - conditions:
                  - condition: template
                    value_template: "{{ command_type == 'down_double_press' }}"
                sequence: []

              # Down Triple Press
              - conditions:
                  - condition: template
                    value_template: "{{ command_type == 'down_triple_press' }}"
                sequence: []

              # Down Hold
              - conditions:
                  - condition: template
                    value_template: "{{ command_type == 'down_hold' }}"
                sequence: []


      ######################################################################
      ## Bottom Button Logic
      ######################################################################
      - conditions:
          - condition: template
            value_template: "{{ button == 'bottom' }}"
        sequence:
          - choose:
              # Bottom Single Press
              - conditions:
                  - condition: template
                    value_template: "{{ command_type == 'press' }}"
                sequence: []

              # Bottom Double Press
              - conditions:
                  - condition: template
                    value_template: "{{ command_type == 'bottom_double_press' }}"
                sequence: []

              # Bottom Triple Press
              - conditions:
                  - condition: template
                    value_template: "{{ command_type == 'bottom_triple_press' }}"
                sequence: []

              # Bottom Hold
              - conditions:
                  - condition: template
                    value_template: "{{ command_type == 'bottom_hold' }}"
                sequence: []
