blueprint:
  name: Philips Hue Dimmer v2 - Light Control
  description: >
    Control a light with a Philips Hue Dimmer v2 (ZHA integration).

    - Short press on the "on" button will turn the light on with predefined brightness and color temperature.
    - Short press on the "off" button will turn the light off.
    - Single press on the "up" button increases brightness by 10%.
    - Single press on the "down" button decreases brightness by 10%.

  domain: automation
  input:
    dimmer_switch:
      name: Hue Dimmer Switch
      description: The Philips Hue v2 Smart Dimmer Switch device that will send the commands
      selector:
        device:
          integration: zha
          model: RWL022
    light_target:
      name: Light(s)
      description: Select the light(s) to control
      selector:
        target:
          entity:
            domain: light
    brightness:
      name: Brightness Percentage
      description: Brightness of the light(s) when turning on
      default: 100
      selector:
        number:
          min: 0
          max: 100
          unit_of_measurement: "%"
          mode: slider
    kelvin:
      name: Color Temperature (Kelvin)
      description: Color temperature of the light(s) when turning on
      default: 4500
      selector:
        number:
          min: 2000
          max: 6500
          unit_of_measurement: "K"
          mode: slider

trigger:
  - platform: event
    event_type: zha_event
    event_data:
      device_id: !input "dimmer_switch"

action:
  - variables:
      button: "{{ trigger.event.data.args.button }}"
      command: "{{ trigger.event.data.command }}"
      light_target: "{{ input.light_target }}"
      brightness: "{{ input.brightness }}"
      kelvin: "{{ input.kelvin }}"
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ button == 'on' }}"
        sequence:
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ command == 'on_short_release' }}"
                sequence:
                  - service: light.turn_on
                    target: !input "light_target"
                    data:
                      brightness_pct: !input "brightness"
                      kelvin: !input "kelvin"
                    
      - conditions:
          - condition: template
            value_template: "{{ button == 'off' }}"
        sequence:
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ command == 'on_short_release' }}"
                sequence:
                  - service: light.turn_off
                    target: !input "light_target"
                    
      - conditions:
          - condition: template
            value_template: "{{ button == 'up' }}"
        sequence:
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ command == 'on_short_release' }}"
                sequence:
                  - service: light.turn_on
                    target: !input "light_target"
                    data:
                      brightness_step_pct: 10

      - conditions:
          - condition: template
            value_template: "{{ button == 'down' }}"
        sequence:
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ command == 'on_short_release' }}"
                sequence:
                  - service: light.turn_on
                    target: !input "light_target"
                    data:
                      brightness_step_pct: -10

mode: single
