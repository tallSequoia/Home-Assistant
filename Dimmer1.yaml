blueprint:
  name: Philips Hue Dimmer RWL022 with Custom On Actions
  description: >
    Control a single light entity with a Philips Hue Dimmer Switch (v2) and define custom actions for the default light behavior.
  domain: automation
  input:
    remote:
      name: Philips Hue Dimmer Switch
      description: Pick a RWL022 Dimmer Switch
      selector:
        device:
          integration: zha
          entity:
            domain: sensor
            device_class: battery
    light_entity:
      name: The light entity to control.
      description: The light entity to be controlled by the dimmer switch.
      selector:
        entity:
          domain: light
    brightness_steps:
      name: Percentage to increase or decrease brightness.
      description: The percentage to increase or decrease brightness when the button is pressed.
      selector:
        number:
          min: 1
          max: 25
          unit_of_measurement: "%"
      default: 18
    colour_temp:
      name: Default Colour Temperature
      description: The default colour temperature when the light is turned on.
      selector:
        number:
          min: 2250
          max: 6500
          unit_of_measurement: "K"
          mode: box
          step: 100
      default: 4500
    custom_on_actions:
      name: Custom Actions for Light On
      description: Actions to perform when the light is turned on.
      default: []
      selector:
        action: {}

mode: restart
max_exceeded: silent

variables:
  light_entity: !input "light_entity"
  brightness_steps: !input "brightness_steps"
  colour_temp: !input "colour_temp"
  custom_on_actions: !input "custom_on_actions"

trigger:
  - platform: event
    event_type: zha_event
    event_data:
      device_id: !input "remote"
      cluster_id: 64512

action:
  - variables:
      command: "{{ trigger.event.data.command }}"

  - choose:
      # Handle on_short_release (single press for custom actions)
      - conditions: "{{ command == 'on_short_release' }}"
        sequence:
          - choose:
              - conditions: "{{ custom_on_actions | length > 0 }}"
                sequence:
                  - service: script.turn_on
                    data:
                      entity_id: "{{ custom_on_actions }}"
            default:
            # Fallback to default behavior (toggle with set brightness and color_temp)
            - service: light.toggle
              data:
                entity_id: !input "light_entity"
                transition: 0.4
                brightness: 255
                color_temp: "{{ colour_temp }}"

      # Handle off_short_release (off action remains the same)
      - conditions: "{{ command == 'off_short_release' }}"
        sequence:
          service: light.turn_off
          data:
            entity_id: !input "light_entity"
            transition: 0.4

      # Handle brightness increase with up_short_release and up_hold
      - conditions:
          - condition: or
            conditions:
              - "{{ command == 'up_short_release' }}"
              - "{{ command == 'up_hold' }}"
        sequence:
          service: light.turn_on
          data:
            entity_id: !input "light_entity"
            transition: 0.5
            brightness_step_pct: "{{ brightness_steps }}"

      # Handle brightness decrease with down_short_release and down_hold
      - conditions:
          - condition: or
            conditions:
              - "{{ command == 'down_short_release' }}"
              - "{{ command == 'down_hold' }}"
        sequence:
          service: light.turn_on
          data:
            entity_id: !input "light_entity"
            transition: 0.5
            brightness_step_pct: "{{ brightness_steps*-1 }}"

      # Handle triple-tap (example behavior for triple-tap to toggle light)
      - conditions: "{{ command == 'on_triple_release' }}"
        sequence:
          - service: light.toggle
            data:
              entity_id: !input "light_entity"
