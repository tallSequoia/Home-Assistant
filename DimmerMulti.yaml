blueprint:
  name: Philips Hue Dimmer RWL022 - multi
  description: >
    Control multiple light entities with a Philips Hue Dimmer Switch (v2) and define custom actions for the default light behaviour.
  domain: automation
  input:
    remote:
      name: Philips Hue Dimmer Switch v2
      description: The Philips Hue v2 Smart Dimmer Switch device.
      selector:
        device:
          integration: zha
          model: RWL022
    light_entities:
      name: The light entities to control.
      description: The light entities to be controlled by the dimmer switch.
      selector:
        target:
          entity:
            domain: light
    brightness_steps:
      name: Percentage to increase or decrease brightness.
      description: The percentage to increase or decrease brightness when the button is pressed.
      selector:
        number:
          min: 1
          max: 50
          unit_of_measurement: "%"
      default: 18
    default_color:
      name: Default Color
      description: The default color when the lights are turned on.
      selector:
        color: {}
      default: "white"
    custom_on_actions:
      name: Custom Actions for Light On
      description: Actions to perform when the lights are turned on.
      default: []
      selector:
        action: {}

mode: restart
max_exceeded: silent

variables:
  light_entities: !input "light_entities"
  brightness_steps: !input "brightness_steps"
  default_color: !input "default_color"
  custom_on_actions: !input "custom_on_actions"

trigger:
  - platform: event
    event_type: zha_event
    event_data:
      device_id: !input "remote"
      cluster_id: 64512

action:
  - variables:
      command: "{{ trigger.event.data.command }}"

  - choose:
      # Handle on_press (single press for custom actions)
      - conditions: "{{ command == 'on_press' }}"
        sequence:
          - choose:
              - conditions: "{{ custom_on_actions | length > 0 }}"
                sequence:
                  - service: script.turn_on
                    data:
                      entity_id: "{{ custom_on_actions }}"
            default:
            # Fallback to default behaviour (toggle with set brightness and color)
            - service: light.turn_on
              target: !input "light_entities"
              data:
                transition: 0.4
                brightness: 255
                color: "{{ default_color }}"

      # Handle off_press (off action remains the same)
      - conditions: "{{ command == 'off_press' }}"
        sequence:
          service: light.turn_off
          target: !input "light_entities"
          data:
            transition: 0.4

      # Handle brightness increase with up_press and up_hold
      - conditions:
          - condition: or
            conditions:
              - "{{ command == 'up_press' }}"
              - "{{ command == 'up_hold' }}"
        sequence:
          service: light.turn_on
          target: !input "light_entities"
          data:
            transition: 0.4
            brightness_step_pct: "{{ brightness_steps }}"

      # Handle brightness decrease with down_press and down_hold
      - conditions:
          - condition: or
            conditions:
              - "{{ command == 'down_press' }}"
              - "{{ command == 'down_hold' }}"
        sequence:
          service: light.turn_on
          target: !input "light_entities"
          data:
            transition: 0.4
            brightness_step_pct: "{{ brightness_steps*-1 }}"
